{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,G,IAACC,EAADD,EAACC,SAAUC,EAAXF,EAAWE,MAChC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACHH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEtBA,E,IAvCMQ,SAASC,cAAc,SAE/BC,iBAAkB,UAGvB,SAAkBC,GAChBA,EAAEC,iBAOF,IALA,IAAIC,EAAaC,SAASH,EAAEI,cAAcf,MAAMgB,OAC1CC,EAAYH,SAASH,EAAEI,cAAcG,KAAKF,OAC1CG,EAASL,SAASH,EAAEI,cAAcI,OAAOH,OAGtCI,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAAG,CACxD,IAAMC,EAAQR,GAA2B,IAAbO,EAAiB,EAAIH,EAEjDK,QAAQC,IAAIF,GACZxB,EAAc,CAAEE,SAAAqB,EAAUpB,MAAAqB,IACvBG,MAAK,SAAA1B,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAErByB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEnE6B,OAAM,SAAA/B,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAEtByB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAuCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n\nform.addEventListener(`submit`, onSubmit);\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  \n  let firstDelay = parseInt(e.currentTarget.delay.value);\n  const delayStep = parseInt(e.currentTarget.step.value);\n  const amount = parseInt(e.currentTarget.amount.value);\n\n\n  for (let position = 1; position <= amount; position += 1) {\n    const delay = firstDelay += position === 1 ? 0 : delayStep;\n    \n    console.log(delay);\n    createPromise({ position, delay })\n      .then(({ position, delay }) => {\n    \n    Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n    \n    Notiflix.Notify.success(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n  }\n}\n\nfunction createPromise({position, delay}) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n    } else {\n          reject({ position, delay });\n    }\n    }, delay)\n  });\n  \n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function onSubmit(e) {\n \n//   console.log(e)\n\n//   for (let position = 1; position <= amount.value; position += 1) {\n//     const delay = firstDelay.value + delayStep.value;\n//     createPromise({position, delay}).then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//     Notiflix.Notify.success(`❌ Rejected promise ${position} in ${delay}ms`)\n//   });\n//   }\n// }\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","param","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","firstDelay","parseInt","currentTarget","value","delayStep","step","amount","position1","delay1","console","log","then","$parcel$interopDefault","Notify","failure","concat","catch","success"],"version":3,"file":"03-promises.1da635ad.js.map"}