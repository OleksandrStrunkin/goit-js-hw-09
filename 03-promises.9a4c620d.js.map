{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,GAAcC,SAACA,EAAQC,MAAEA,IAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACHH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE9BA,EAAM,G,CAvCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAGtB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAaC,SAASH,EAAEI,cAAcf,MAAMgB,OAChD,MAAMC,EAAYH,SAASH,EAAEI,cAAcG,KAAKF,OAC1CG,EAASL,SAASH,EAAEI,cAAcI,OAAOH,OAG/C,IAAK,IAAII,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAAG,CACxD,MAAMC,EAAQR,GAA2B,IAAbO,EAAiB,EAAIH,EAEjDK,QAAQC,IAAIF,GACZvB,EAAc,CAAEC,SAAAqB,EAAUpB,MAAAqB,IACvBG,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MAErByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAErE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAEtByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n\nform.addEventListener(`submit`, onSubmit);\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  \n  let firstDelay = parseInt(e.currentTarget.delay.value);\n  const delayStep = parseInt(e.currentTarget.step.value);\n  const amount = parseInt(e.currentTarget.amount.value);\n\n\n  for (let position = 1; position <= amount; position += 1) {\n    const delay = firstDelay += position === 1 ? 0 : delayStep;\n    \n    console.log(delay);\n    createPromise({ position, delay })\n      .then(({ position, delay }) => {\n    \n    Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n    \n    Notiflix.Notify.success(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n  }\n}\n\nfunction createPromise({position, delay}) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n    } else {\n          reject({ position, delay });\n    }\n    }, delay)\n  });\n  \n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function onSubmit(e) {\n \n//   console.log(e)\n\n//   for (let position = 1; position <= amount.value; position += 1) {\n//     const delay = firstDelay.value + delayStep.value;\n//     createPromise({position, delay}).then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//     Notiflix.Notify.success(`❌ Rejected promise ${position} in ${delay}ms`)\n//   });\n//   }\n// }\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","firstDelay","parseInt","currentTarget","value","delayStep","step","amount","position1","delay1","console","log","then","$parcel$interopDefault","Notify","failure","catch","success"],"version":3,"file":"03-promises.9a4c620d.js.map"}